Mongo Syntax Solo Challenge

// 1) Create a collection named orders.
      > db.createCollection('orders')

// 2) Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields. Order dates should be: 2017-02-03, 2017-04-04, 2017-01-02
      > db.orders.insert( {date: new Date('2017-02-03'), orderTotal: 50, lineItems: [ {unitPrice: 5}, {quantity: 100}, {productName: 'dinosaur'} ] } )
      > db.orders.insert( {date: new Date('2017-04-04'), orderTotal: 100, lineItems: [ {unitPrice: 10}, {quantity: 30}, {productName: 'llama'} ] } )
      > db.orders.insert( {date: new Date('2017-01-02'), orderTotal: 500, lineItems: [ {unitPrice: 700}, {quantity: 500}, {productName: 'gnome'} ] } )

// 3) Find all orders and make them look pretty.
      > orders.find().pretty()

// 4) Find all orders with an orderDate that is after 1/31/2017.
      > db.orders.find({date: { $gt: new Date('2017-01-31') }})

// 5) Change the orderTotal from 2/3/2017 to 63 dollars (you do NOT have to ensure the lineItems' unitPrice * quantity add up to the orderTotal)
      > db.orders.update( {orderTotal: 50}, { $set: {orderTotal: 60} } )

// 6) Add another lineItem to the order from 4/4/2017
      > db.orders.update( {date: new Date('2017-04-04') }, {$push: {lineItems: {material: "rubber"}}} )

// 7) Change the first lineItem in the order from 1/2/2017 to be for 2 'transistor radio's
      > db.orders.update( {date: new Date('2017-01-02') }, {$set: {'lineItems.1.quantity': 2, 'lineItems.2.productName': 'transistor radio'} } )

// 8) Find orders with lineItems that have a quantity that is less than 10, but greater than 2. You will have to research $and
order fields
      >


// directions:
Your orders need to have the following fields:

orderDate -- see https://docs.mongodb.org/manual/reference/method/Date/
orderTotal
lineItems -- a sub-document (array) that can accommodate many line items with fields: unitPrice, quantity, productName
